module MetaC-CSP

imports

  BaseC/Identifiers
  BaseC/Declarations
  BaseC/Stmt
  BaseC/Expr
  BaseC/Program // Importing start symbol to make sdf2rtg work

lexical syntax

  Keyword = "process"
  Keyword = "chan"
  Keyword = "par"
  Keyword = "alts"

context-free syntax

  Declaration = CSPProcess

  CSPProcess.CSPProcess =
    [

    process [Identifier]([ParameterList]) [CompoundStatement]
    ]


  TypeSpecifier.CSPChan =
    [chan<[TypeName]>]

  TypeSpecifier.CSPVoidChan =
    [chan]


  CSPChanWrite.CSPChanWrite =
    [[VarExpr] ! [AExpr]]

  AExpr =
    CSPChanWrite


  CSPChanRead.CSPChanRead =
    [[VarExpr] ? [VarExpr]]

  AExpr =
    CSPChanRead


  Statement.CSPPar =
    [
    par {
      [CSPProcessInvocation*]
    }
    ]


  CSPProcessInvocation.CSPInvokeProcess =
    [[Identifier]([{AExpr ", "}*]);]

  CSPProcessInvocation.CSPInvokeInlineProcess =
    CompoundStatement


  Statement.CSPAlts =
    [
    alts {
      [CSPAlt*]
    }
    ]


  CSPAlt.CSPAlt =
    [case [CSPAltAction]: [Statement]]

  CSPAltAction =
    CSPChanWrite

  CSPAltAction =
    CSPChanRead

  CSPAltAction =
    VarExpr
