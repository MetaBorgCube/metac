module BaseC-Declarations

imports

  Common
  BaseC-Constants
  BaseC-Expr
  BaseC-Identifiers
  BaseC-Types

context-free syntax

  Decl.NoInit = Identifier

  StorageClass.Auto     = <auto>
  StorageClass.Register = <register>
  StorageClass.Static   = <static>
  StorageClass.Extern   = <extern>
  StorageClass.Typeof   = <typeof>

  Qualifier.Const     = <const>
  Qualifier.Volatile  = <volatile>

  DeclarationSpecifier = StorageClass
  DeclarationSpecifier = PureType
  DeclarationSpecifier = Qualifier

  Declaration.Declaration = <<DeclarationSpecifier+> <{InitDeclarator ", "}*>;>

  InitDeclarator                 = Declarator
  InitDeclarator.InitDeclarator  = <<Declarator> = <Initializer>>

  Pointer.Pointer = <* <Qualifier*> <Pointer?>>

  Declarator.Declarator                 = <<Pointer?> <DirectDeclarator>>
  // Abstract declarator is a declaration without eventually an identifier,
  // used in parameter lists
  AbstractDeclarator.AbstractDeclarator = <<Pointer?> <AbstractDirectDeclarator>>

  DirectDeclarator                        = DeclarationSpecifier {reject}
  DirectDeclarator                        = Identifier
  DirectDeclarator.ParensDecl             = <(<Declarator>)>
  DirectDeclarator.ArrayDecl              = <<DirectDeclarator> [<Constant?>]>
  DirectDeclarator.FuncDecl               = <<DirectDeclarator> (<ParameterList?>)> {prefer}
  DirectDeclarator.AbstractFuncDecl       = <<DirectDeclarator> (<AbstractParameterList?>)>

  AbstractDirectDeclarator.ParensDecl     = <(<AbstractDeclarator>)>
  AbstractDirectDeclarator.ArrayDecl      = <<AbstractDirectDeclarator?> [<Constant?>]>
  AbstractDirectDeclarator.FuncDecl       = <<AbstractDirectDeclarator?> (<AbstractParameterList?>)>

  Parameter.Parameter                     = <<DeclarationSpecifier+> <Declarator>>
  AbstractParameter.AbstractParameter     = <<DeclarationSpecifier+> <AbstractDeclarator?>>
  AbstractParameter.Parameter             = <<DeclarationSpecifier+> <Declarator>> {prefer}

  VArg.VArg = <, ...>
  ParameterList.Parameters         = <<{Parameter ","}+> <VArg?>>
  AbstractParameterList.Parameters = <<{AbstractParameter ","}+> <VArg?>>

  Initializer = Expr
  Initializer = BlockInitializer

  BlockInitializer.BlockInitializer = <{}>
