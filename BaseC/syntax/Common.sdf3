module Common

lexical syntax

  ID =
    [a-zA-Z] [a-zA-Z0-9]*


  INT =
    "-"? [0-9]+


  CHAR =
    ~[\'\n]
  CHAR =
    [\\] [ntvbrfa\\\?\'\"]
  CHAR =
    [\\] [x] [0-9A-E] [0-9A-E]
  CHAR =
    [\\] [0-7] [0-7]? [0-7]?


  CONSCHAR =
    [\']CHAR[\']


  STRINGCHAR =
    ~[\"\n]
  STRINGCHAR =
    [\\] [ntvbrfa\\\?\'\"]
  STRINGCHAR =
    [\\] [x] [0-9A-E] [0-9A-E]
  STRINGCHAR =
    [\\] [0-7] [0-7]? [0-7]?


  CONSSTRING =
    [\"]STRINGCHAR*[\"]


  LAYOUT         = [\ \t\n\r]
  CommentChar    = [\*]
  LAYOUT         = "/*" InsideComment* "*/"
  InsideComment  = ~[\*]
  InsideComment  = CommentChar
  LAYOUT         = "//" ~[\n\r]* NewLineEOF
  NewLineEOF     = [\n\r]
  NewLineEOF     = EOF
  EOF            =


lexical restrictions

  // Ensure greedy matching for lexicals

  CommentChar   -/- [\/]
  INT           -/- [0-9]
  ID            -/- [a-zA-Z0-9\_]

  // EOF may not be followed by any char

  EOF           -/- ~[]

context-free restrictions

  // Ensure greedy matching for comments

  LAYOUT? -/- [\ \t\n\r]
  LAYOUT? -/- [\/].[\/]
  LAYOUT? -/- [\/].[\*]

