module expressions

language Metac

test get type of add expr [[
  int32 f() { return [[2 + 2]]; }
]] run get-type to UInt8()

test get type of mult expr [[
  int32 f() { return [[1 / '3']]; }
]] run get-type to UInt8()

test variable type [[
  const int32 a;
  int32 b = [[a]];
]] run get-type to Int32()

test variable type from higher scope [[
  int32 a = 1;
  int32 b = 2;
  int32 f() { return [[a]]; }
]] run get-type to Int32()

test using variables in expressions [[
  int32 a = 1;
  int32 b = 2;
  int32 c = [[a + b]];
]] run get-type to Int32()

test struct field type [[
  struct X {unsigned short x;};
  struct X a;
  uint32 b = [[a.x]];
]] run get-type to UInt16()

test union pointer field type [[
  struct X {unsigned short x;};
  struct X *a;
  uint32 b = [[a->x]];
]] run get-type to UInt16()
