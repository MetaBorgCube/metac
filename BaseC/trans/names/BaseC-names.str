module BaseC-names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/Metac
  BaseC/trans/desugar/-
  BaseC/trans/names/-


signature
  constructors
    NablNsModule : Namespace


signature
  constructors
    


rules

  nabl-custom-properties(add-properties) =
    ![] ; add-properties


rules

  nabl-get-scope =
    ?Program(file, _)
    ; ![ NablNsVariable()
       , NablNsTypedef()
       , NablNsFunction()
       , NablNsEnum()
       , NablNsEnumerator()
       , NablNsStruct()
       , NablNsUnion()
       ]

  nabl-get-name :
    Program(file, _) -> file

  nabl-name-apply(s) =
    Program(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Program(file, _)
    ; origin-track-forced(
        Program(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsModule()
          , Unique()
          , Current()
          , [ NablNsVariable()
            , NablNsTypedef()
            , NablNsFunction()
            , NablNsEnum()
            , NablNsEnumerator()
            , NablNsStruct()
            , NablNsUnion()
            ]
          , []
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    IncludeModule(m, _) -> m

  nabl-name-apply(s) =
    IncludeModule(s, id)

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?IncludeModule(m, _)
    ; origin-track-forced(
        IncludeModule(
          nabl-use(
          | lang__
          , ctx__
          , uniques__
          , uris__
          , [ <{:
                 id
                 ; !UseCandidate(
                      NablNsModule()
                    , []
                    , Current()
                    , True()
                    , []
                    )
               }>
            ]
          )
        , id
        )
      |
      )

  nabl-import-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?IncludeModule(m, _)
    ; origin-track-forced(
        nabl-import(
        | lang__
        , ctx__
        , uniques__
        , uris__
        , [ <{:
               id
               ; !Wildcard(
                    [ Import(lang__, NablNsTypedef())
                    , Import(lang__, NablNsFunction())
                    , Import(lang__, NablNsEnum())
                    , Import(lang__, NablNsEnumerator())
                    , Import(lang__, NablNsStruct())
                    , Import(lang__, NablNsUnion())
                    , Import(lang__, NablNsVariable())
                    ]
                  , Context(
                      NablNsModule()
                    , m
                    , []
                    , Current()
                    )
                  , Current()
                  , []
                  )
             }>
          ]
        )
      |
      )

  nabl-scoping-site =
    ?CompoundStatement(_)
    ; nabl-scope(
      | [ NablNsVariable()
        , NablNsTypedef()
        , NablNsFunction()
        , NablNsEnum()
        , NablNsEnumerator()
        , NablNsStruct()
        , NablNsUnion()
        ]
      )

  nabl-get-scope =
    ?CompoundStatement(_)
    ; ![ NablNsVariable()
       , NablNsTypedef()
       , NablNsFunction()
       , NablNsEnum()
       , NablNsEnumerator()
       , NablNsStruct()
       , NablNsUnion()
       ]