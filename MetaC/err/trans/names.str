module MetaC/err/trans/names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/Metac
  BaseC/trans/desugar/-
  BaseC/trans/names/-
  MetaC/err/trans/constructors


signature
  constructors
    NablNsErrFailGuarded  : Namespace
    NablNsErrFailWildcard : Namespace


signature
  constructors
    NablProp_err-fail-index    : Property
    NablProp_err-fail-var-name : Property
    NablProp_err-fail-var      : Property


rules

  nabl-custom-properties(add-properties) =
    ![NablProp_err-fail-index(), NablProp_err-fail-var-name(), NablProp_err-fail-var()]
    ; add-properties

  err-fail-index-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  err-fail-index-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  err-fail-index-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_err-fail-index())

  err-fail-index-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  err-fail-index-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  err-fail-index-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_err-fail-index(), ctx__, [])

  err-fail-index-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_err-fail-index(), ctx__, dep*)

  err-fail-index-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_err-fail-index()
    , ctx__
    , Eq()
    , expected
    )

  err-fail-index-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_err-fail-index(), ctx__, relation, expected)

  create-err-fail-index-task(|ctx__) =
    fail

  get-err-fail-index(|) =
    get-property(|NablProp_err-fail-index())

  store-err-fail-index(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_err-fail-index(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-err-fail-index-task(|ctx__)> term
    where NablProp_err-fail-index() := kind

  err-fail-var-name-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  err-fail-var-name-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  err-fail-var-name-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_err-fail-var-name())

  err-fail-var-name-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  err-fail-var-name-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  err-fail-var-name-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_err-fail-var-name(), ctx__, [])

  err-fail-var-name-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_err-fail-var-name(), ctx__, dep*)

  err-fail-var-name-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_err-fail-var-name()
    , ctx__
    , Eq()
    , expected
    )

  err-fail-var-name-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_err-fail-var-name(), ctx__, relation, expected)

  create-err-fail-var-name-task(|ctx__) =
    fail

  get-err-fail-var-name(|) =
    get-property(|NablProp_err-fail-var-name())

  store-err-fail-var-name(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_err-fail-var-name(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-err-fail-var-name-task(|ctx__)> term
    where NablProp_err-fail-var-name() := kind

  err-fail-var-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  err-fail-var-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  err-fail-var-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_err-fail-var())

  err-fail-var-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  err-fail-var-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  err-fail-var-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_err-fail-var(), ctx__, [])

  err-fail-var-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_err-fail-var(), ctx__, dep*)

  err-fail-var-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_err-fail-var()
    , ctx__
    , Eq()
    , expected
    )

  err-fail-var-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_err-fail-var(), ctx__, relation, expected)

  create-err-fail-var-task(|ctx__) =
    fail

  get-err-fail-var(|) =
    get-property(|NablProp_err-fail-var())

  store-err-fail-var(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_err-fail-var(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-err-fail-var-task(|ctx__)> term
    where NablProp_err-fail-var() := kind


rules

  nabl-scoping-site =
    ?ErrAttemptStatement(_, _, _, _)
    ; nabl-scope(
      | [NablNsErrFailGuarded(), NablNsErrFailWildcard()]
      )

  nabl-get-scope =
    ?ErrAttemptStatement(_, _, _, _)
    ; ![NablNsErrFailGuarded(), NablNsErrFailWildcard()]

  nabl-get-name :
    ErrVarDeclaration(
      Type(mods, type)
    , Identifier(name)
    , _
    ) -> name

  nabl-name-apply(s) =
    ErrVarDeclaration(Type(id, id), Identifier(s), id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrVarDeclaration(
       Type(mods, type)
     , Identifier(name)
     , _
     )
    ; origin-track-forced(
        ErrVarDeclaration(
          origin-track-forced(Type(id, id)|)
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsVariable()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?ErrVarDeclaration(
       Type(mods, type)
     , Identifier(name)
     , _
     )
    ; (where(id)
       ; ErrVarDeclaration(
           Type(id, id)
         , Identifier(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), type, [])
               , Prop(NablProp_modifiers(), Modifiers(mods), [])
               ]
             )
           )
         , id
         ))
    ; fail

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrFailGuarded(
       i
     , Type(mods, type)
     , Identifier(name)
     , s
     )
    ; origin-track-forced(
        ErrFailGuarded(
          id
        , origin-track-forced(
            Type(
              id
            , nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsErrFailGuarded()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        , origin-track-forced(Identifier(id)|)
        , id
        )
      |
      )
    ; origin-track-forced(
        ErrFailGuarded(
          id
        , origin-track-forced(Type(id, id)|)
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri2__
              , ?s-uri2__
              | lang__
              , ctx__
              , uniques__
              , c-uri1__
              , s-uri1__
              , NablNsVariable()
              , Unique()
              , [DefScope(s)]
              , []
              , []
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-external-def-site(|lang__, ctx__, uniques__, uri__, states__, implicits__) =
    ?ErrFailGuarded(
       i
     , Type(mods, type)
     , Identifier(name)
     , s
     )
    ; uri2__ := <nabl-uri> name
    ; <nabl-def-alias(|ctx__, uri2__)> s
    ; fail

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?ErrFailGuarded(
       i
     , Type(mods, type)
     , Identifier(name)
     , s
     )
    ; (where(id)
       ; ErrFailGuarded(
           id
         , Type(
             id
           , nabl-store-props(
             | ctx__
             , [ Prop(NablProp_err-fail-index(), i, [])
               , Prop(NablProp_err-fail-var-name(), name, [])
               ]
             )
           )
         , Identifier(id)
         , id
         )
       ; where(id)
       ; ErrFailGuarded(
           id
         , Type(id, id)
         , Identifier(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), type, [])
               , Prop(NablProp_err-fail-var(), True(), [])
               ]
             )
           )
         , id
         ))
    ; fail

  nabl-get-name :
    ErrFailWildcard(wildcard-name, _) -> wildcard-name

  nabl-name-apply(s) =
    ErrFailWildcard(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrFailWildcard(wildcard-name, _)
    ; origin-track-forced(
        ErrFailWildcard(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsErrFailWildcard()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?ErrFailWildcard(wildcard-name, _)
    ; (where(id)
       ; ErrFailWildcard(
           nabl-store-props(
           | ctx__
           , [Prop(NablProp_err-fail-index(), wildcard-name, [])]
           )
         , id
         ))
    ; fail