module MetaC/err/trans/names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/Metac
  BaseC/trans/desugar/-
  BaseC/trans/names/-
  MetaC/err/trans/constructors


signature
  constructors
    NablNsErrFailGuarded  : Namespace
    NablNsErrFailWildcard : Namespace


signature
  constructors
    


rules

  nabl-custom-properties(add-properties) =
    ![] ; add-properties


rules

  nabl-scoping-site =
    ?ErrAttemptStatement(_, _, _)
    ; nabl-scope(
      | [NablNsErrFailGuarded(), NablNsErrFailWildcard()]
      )

  nabl-get-scope =
    ?ErrAttemptStatement(_, _, _)
    ; ![NablNsErrFailGuarded(), NablNsErrFailWildcard()]

  nabl-get-name :
    ErrVarDeclaration(
      Type(mods, type)
    , Identifier(name)
    , _
    ) -> name

  nabl-name-apply(s) =
    ErrVarDeclaration(Type(id, id), Identifier(s), id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrVarDeclaration(
       Type(mods, type)
     , Identifier(name)
     , _
     )
    ; origin-track-forced(
        ErrVarDeclaration(
          origin-track-forced(Type(id, id)|)
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsVariable()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?ErrVarDeclaration(
       Type(mods, type)
     , Identifier(name)
     , _
     )
    ; (where(id)
       ; ErrVarDeclaration(
           Type(id, id)
         , Identifier(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), type, [])
               , Prop(NablProp_modifiers(), Modifiers(mods), [])
               ]
             )
           )
         , id
         ))
    ; fail

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrFailGuarded(
       t@Type(mods, type)
     , Identifier(name)
     , s
     )
    ; origin-track-forced(
        ErrFailGuarded(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsErrFailGuarded()
          , Unique()
          , Current()
          , []
          , []
          )
          ; origin-track-forced(Type(id, id)|)
        , origin-track-forced(Identifier(id)|)
        , id
        )
      |
      )
    ; origin-track-forced(
        ErrFailGuarded(
          id ; origin-track-forced(Type(id, id)|)
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri2__
              , ?s-uri2__
              | lang__
              , ctx__
              , uniques__
              , c-uri1__
              , s-uri1__
              , NablNsVariable()
              , Unique()
              , [DefScope(s)]
              , []
              , []
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri2__)
    ; match(sibl-uris__|s-uri2__)
    ; match(implicits__|[])

  nabl-external-def-site(|lang__, ctx__, uniques__, uri__, states__, implicits__) =
    ?ErrFailGuarded(
       t@Type(mods, type)
     , Identifier(name)
     , s
     )
    ; uri2__ := <nabl-uri> name
    ; <nabl-def-alias(|ctx__, uri2__)> s
    ; fail

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?ErrFailGuarded(
       t@Type(mods, type)
     , Identifier(name)
     , s
     )
    ; (where(id)
       ; ErrFailGuarded(
           id ; Type(id, id)
         , Identifier(
             nabl-store-props(
             | ctx__
             , [Prop(Type(), type, [])]
             )
           )
         , id
         ))
    ; fail

  nabl-get-name :
    ErrFailWildcard(wildcard-name, _) -> wildcard-name

  nabl-name-apply(s) =
    ErrFailWildcard(s, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?ErrFailWildcard(wildcard-name, _)
    ; origin-track-forced(
        ErrFailWildcard(
          nabl-def(
            ?c-uri1__
          , ?s-uri1__
          | lang__
          , ctx__
          , uniques__
          , uri__
          , uri__
          , NablNsErrFailWildcard()
          , Unique()
          , Current()
          , []
          , []
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])