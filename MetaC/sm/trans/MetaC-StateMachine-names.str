module MetaC-StateMachine-names

imports
  lib/runtime/nabl/-
  lib/runtime/task/-
  lib/runtime/properties/-
  lib/runtime/types/-
  lib/runtime/relations/-
  lib/runtime/editor/-
  include/Metac
  BaseC/trans/names/-
  MetaC/sm/trans/MetaC-StateMachine-constructors


signature
  constructors
    NablNsStateMachine : Namespace
    NablNsState        : Namespace
    NablNsEvent        : Namespace


signature
  constructors
    NablProp_event-index : Property


rules

  nabl-custom-properties(add-properties) =
    ![NablProp_event-index()] ; add-properties

  event-index-is(|ctx__) =
    nabl-prop-calc(|ctx__, [])

  event-index-is(|ctx__, dep*) =
    nabl-prop-calc(|ctx__, dep*)

  event-index-task(|ctx__) =
    get-or-create-property-task(|ctx__, NablProp_event-index())

  event-index-list(|ctx__) =
    nabl-prop-list(|ctx__, [])

  event-index-list(|ctx__, dep*) =
    nabl-prop-list(|ctx__, dep*)

  event-index-lookup(|ctx__) =
    nabl-prop-lookup(|NablProp_event-index(), ctx__, [])

  event-index-lookup(|ctx__, dep*) =
    nabl-prop-lookup(|NablProp_event-index(), ctx__, dep*)

  event-index-match(|ctx__, expected) =
    nabl-prop-match(
    | NablProp_event-index()
    , ctx__
    , Eq()
    , expected
    )

  event-index-match(|ctx__, relation, expected) =
    nabl-prop-match(|NablProp_event-index(), ctx__, relation, expected)

  create-event-index-task(|ctx__) =
    fail

  get-event-index(|) =
    get-property(|NablProp_event-index())

  store-event-index(|ctx__, prop) =
    nabl-store-prop(
    | ctx__
    , Prop(NablProp_event-index(), prop, [])
    )

  create-property-task(|ctx__, kind):
    term -> <create-event-index-task(|ctx__)> term
    where NablProp_event-index() := kind


rules

  nabl-get-scope =
    ?StateMachine(Identifier(name), _, _, _, _)
    ; ![NablNsVariable(), NablNsEvent(), NablNsState()]

  nabl-get-name :
    StateMachine(Identifier(name), _, _, _, _) -> name

  nabl-name-apply(s) =
    StateMachine(Identifier(s), id, id, id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?StateMachine(Identifier(name), _, _, _, _)
    ; origin-track-forced(
        StateMachine(
          origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsStateMachine()
              , Unique()
              , Current()
              , [NablNsVariable(), NablNsEvent(), NablNsState()]
              , []
              )
            )
          |
          )
        , id
        , id
        , id
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    InitState(Identifier(init)) -> init

  nabl-name-apply(s) =
    InitState(Identifier(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?InitState(Identifier(init))
    ; origin-track-forced(
        InitState(
          origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsState()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-get-name :
    Event(index, Identifier(name), _) -> name

  nabl-name-apply(s) =
    Event(id, Identifier(s), id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Event(index, Identifier(name), _)
    ; origin-track-forced(
        Event(
          id
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsEvent()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?Event(index, Identifier(name), _)
    ; (where(id)
       ; Event(
           id
         , Identifier(
             nabl-store-props(
             | ctx__
             , [Prop(NablProp_event-index(), index, [])]
             )
           )
         , id
         ))
    ; fail

  nabl-get-name :
    State(Identifier(state), _, _) -> state

  nabl-name-apply(s) =
    State(Identifier(s), id, id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?State(Identifier(state), _, _)
    ; origin-track-forced(
        State(
          origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsState()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        , id
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Transition(None(), _, _, Identifier(state)) -> state

  nabl-name-apply(s) =
    Transition(None(), id, id, Identifier(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Transition(None(), _, _, Identifier(state))
    ; origin-track-forced(
        Transition(
          origin-track-forced(None()|)
        , id
        , id
        , origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsState()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Transition(
       Some(Identifier(event))
     , _
     , _
     , Identifier(state)
     )
    ; origin-track-forced(
        Transition(
          origin-track-forced(
            Some(
              origin-track-forced(
                Identifier(
                  nabl-use(
                  | lang__
                  , ctx__
                  , uniques__
                  , uris__
                  , [ <{:
                         id
                         ; !UseCandidate(
                              NablNsEvent()
                            , []
                            , Current()
                            , True()
                            , []
                            )
                       }>
                    ]
                  )
                )
              |
              )
            )
          |
          )
        , id
        , id
        , origin-track-forced(Identifier(id)|)
        )
      |
      )
    ; origin-track-forced(
        Transition(
          origin-track-forced(
            Some(origin-track-forced(Identifier(id)|))
          |
          )
        , id
        , id
        , origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsState()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?StateMachineVariable(Identifier(sm-name), Identifier(var-name))
    ; origin-track-forced(
        StateMachineVariable(
          origin-track-forced(Identifier(id)|)
        , origin-track-forced(
            Identifier(
              nabl-def(
                ?c-uri1__
              , ?s-uri1__
              | lang__
              , ctx__
              , uniques__
              , uri__
              , uri__
              , NablNsVariable()
              , Unique()
              , Current()
              , []
              , []
              )
            )
          |
          )
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?StateMachineVariable(Identifier(sm-name), Identifier(var-name))
    ; (where(id)
       ; StateMachineVariable(
           Identifier(id)
         , Identifier(
             nabl-store-props(
             | ctx__
             , [ Prop(Type(), StateMachine(sm-name), [])
               ]
             )
           )
         ))
    ; fail

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?StateMachineVariable(Identifier(sm-name), Identifier(var-name))
    ; origin-track-forced(
        StateMachineVariable(
          origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsStateMachine()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        , origin-track-forced(Identifier(id)|)
        )
      |
      )

  nabl-get-name :
    StateMachineTriggerEvent(e, Identifier(event), params) -> event

  nabl-name-apply(s) =
    StateMachineTriggerEvent(id, Identifier(s), id)

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?StateMachineTriggerEvent(e, Identifier(event), params)
    ; origin-track-forced(
        StateMachineTriggerEvent(
          id
        , origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{s, p__:
                     {p__:
                       p__ := <new-task-fixdeps(|ctx__, [])> Id(
                                                               <get-or-create-property-task(|ctx__, Type())> e
                                                             )
                       ; {prev__:
                           ?prev__
                           ; s := <new-task-fixdeps(|ctx__, [prev__])> Rewrite("match0", p__)
                         }
                     }
                     ; !UseCandidate(
                          NablNsEvent()
                        , []
                        , Context(
                            NablNsStateMachine()
                          , s
                          , []
                          , Current()
                          )
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        , id
        )
      |
      )

  task-rewrite :
    ("match0", StateMachine(s)) -> s