module BaseC-structs

imports
  runtime/nabl/-
  runtime/task/-
  runtime/properties/-
  runtime/types/-
  runtime/relations/-
  runtime/editor/-
  include/Metac
  BaseC/desugar/-
  BaseC/names/BaseC-variables
  BaseC/names/BaseC-structs-custom


signature
  constructors
    NablNsStruct : Namespace
    NablNsUnion  : Namespace
    NablNsField  : Namespace


signature
  constructors
    


rules

  nabl-custom-properties(add-properties) =
    ![] ; add-properties


rules

  nabl-get-scope =
    ?Struct(Some(Identifier(name)), _)
    ; ![NablNsField()]

  nabl-get-name :
    Struct(Some(Identifier(name)), _) -> name

  nabl-name-apply(s) =
    Struct(Some(Identifier(s)), id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Struct(Some(Identifier(name)), _)
    ; origin-track-forced(
        Struct(
          origin-track-forced(
            Some(
              origin-track-forced(
                Identifier(
                  nabl-def(
                    ?c-uri1__
                  , ?s-uri1__
                  | lang__
                  , ctx__
                  , uniques__
                  , uri__
                  , uri__
                  , NablNsStruct()
                  , Unique()
                  , Current()
                  , [NablNsField()]
                  , []
                  )
                )
              |
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Struct(Identifier(name)) -> name

  nabl-name-apply(s) =
    Struct(Identifier(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Struct(Identifier(name))
    ; origin-track-forced(
        Struct(
          origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsStruct()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-get-scope =
    ?Union(Some(Identifier(name)), _)
    ; ![NablNsField()]

  nabl-get-name :
    Union(Some(Identifier(name)), _) -> name

  nabl-name-apply(s) =
    Union(Some(Identifier(s)), id)

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?Union(Some(Identifier(name)), _)
    ; origin-track-forced(
        Union(
          origin-track-forced(
            Some(
              origin-track-forced(
                Identifier(
                  nabl-def(
                    ?c-uri1__
                  , ?s-uri1__
                  | lang__
                  , ctx__
                  , uniques__
                  , uri__
                  , uri__
                  , NablNsUnion()
                  , Unique()
                  , Current()
                  , [NablNsField()]
                  , []
                  )
                )
              |
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-get-name :
    Union(Identifier(name)) -> name

  nabl-name-apply(s) =
    Union(Identifier(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?Union(Identifier(name))
    ; origin-track-forced(
        Union(
          origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{:
                     id
                     ; !UseCandidate(
                          NablNsUnion()
                        , []
                        , Current()
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  nabl-get-name :
    StructDeclarator(
      Type(mods, type)
    , decl
    , Decl(Identifier(name))
    , _
    ) -> name

  nabl-name-apply(s) =
    StructDeclarator(
      Type(id, id)
    , id
    , Decl(Identifier(s))
    , id
    )

  nabl-def-site(child-uris__, sibl-uris__, implicits__|lang__, ctx__, uniques__, uri__, states__) =
    ?StructDeclarator(
       Type(mods, type)
     , decl
     , Decl(Identifier(name))
     , _
     )
    ; origin-track-forced(
        StructDeclarator(
          origin-track-forced(Type(id, id)|)
        , id
        , origin-track-forced(
            Decl(
              origin-track-forced(
                Identifier(
                  nabl-def(
                    ?c-uri1__
                  , ?s-uri1__
                  | lang__
                  , ctx__
                  , uniques__
                  , uri__
                  , uri__
                  , NablNsField()
                  , Unique()
                  , Current()
                  , []
                  , []
                  )
                )
              |
              )
            )
          |
          )
        , id
        )
      |
      )
    ; match(child-uris__|c-uri1__)
    ; match(sibl-uris__|s-uri1__)
    ; match(implicits__|[])

  nabl-prop-site(|lang__, ctx__, uris__, states__, implicits__) =
    ?StructDeclarator(
       Type(mods, type)
     , decl
     , Decl(Identifier(name))
     , _
     )
    ; (where(id)
       ; StructDeclarator(
           Type(id, id)
         , id
         , Decl(
             Identifier(
               nabl-store-props(
               | ctx__
               , [ Prop(Type(), type, [])
                 , Prop(NablProp_modifiers(), mods, [])
                 ]
               )
             )
           )
         , id
         ))
    ; fail

  nabl-get-name :
    PointerField(e, Identifier(field)) -> field

  nabl-name-apply(s) =
    PointerField(id, Identifier(s))

  nabl-use-site(|lang__, ctx__, uniques__, uris__, states__) =
    ?PointerField(e, Identifier(field))
    ; origin-track-forced(
        PointerField(
          id
        , origin-track-forced(
            Identifier(
              nabl-use(
              | lang__
              , ctx__
              , uniques__
              , uris__
              , [ <{s, p__:
                     {p__:
                       p__ := <new-task-fixdeps(|ctx__, [])> Id(
                                                               <get-or-create-property-task(|ctx__, Type())> e
                                                             )
                       ; {prev__:
                           ?prev__
                           ; s := <new-task-fixdeps(|ctx__, [prev__])> Rewrite("match0", p__)
                         }
                     }
                     ; !UseCandidate(
                          NablNsField()
                        , []
                        , Context(
                            NablNsStruct()
                          , s
                          , []
                          , Current()
                          )
                        , True()
                        , []
                        )
                   }>
                , <{s, p__:
                     {p__:
                       p__ := <new-task-fixdeps(|ctx__, [])> Id(
                                                               <get-or-create-property-task(|ctx__, Type())> e
                                                             )
                       ; {prev__:
                           ?prev__
                           ; s := <new-task-fixdeps(|ctx__, [prev__])> Rewrite("match1", p__)
                         }
                     }
                     ; !UseCandidate(
                          NablNsField()
                        , []
                        , Context(
                            NablNsUnion()
                          , s
                          , []
                          , Current()
                          )
                        , True()
                        , []
                        )
                   }>
                ]
              )
            )
          |
          )
        )
      |
      )

  task-rewrite :
    ("match0", Pointer(Struct(Identifier(s)))) -> s

  task-rewrite :
    ("match1", Pointer(Union(Identifier(s)))) -> s