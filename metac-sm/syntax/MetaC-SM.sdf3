module MetaC-SM

imports

  BaseC/Common
  BaseC/Constants
  BaseC/Declarations 
  BaseC/Identifiers 
  BaseC/FunDef 
  BaseC/Expr
  BaseC/Stmt
  BaseC/Program // Importing start symbol to make sdf2rtg work
  
lexical syntax

  Keyword = "statemachine"

context-free syntax


  Declaration =
    StateMachine


  Declaration =
    StateMachineVariable

  StateMachine.StateMachine =
    [
    statemachine [Identifier] {
      [InitState]
      [{EventOrDeclaration "\n"}*]
      [{State "\n"}+]
    }
    ]


  InitState.InitState =
    [init [Identifier];]


  EventOrDeclaration.Event =
    <event <Identifier>(<ParameterList>);> {prefer}

  EventOrDeclaration =
    Declaration


  State.State =
    [
    state [Identifier] {
      [Entry]
      [Transition*]
    }]


  Entry.None = ""

  Entry.Entry =
    [
    entry [CompoundStatement]
    ]

  Transition.Transition =
    [on [Identifier?] [Guard] [Effect] -> [Identifier];]


  Guard.None = ""

  Guard.Guard =
    <[<Expr>]>


  Effect.None = ""

  Effect.Effect =
    </ <Statement>>


  StateMachineVariable.StateMachineVariable =
    [statemachine [Identifier] [Identifier];]


  PostFixExpr.StateMachineTriggerEvent =
    [[PostFixExpr] <| [Identifier]([{AExpr ", "}*])]


  PostFixExpr.StateMachineField =
    [[PostFixExpr] |> [Identifier]]
